// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Railway_Group01.Data;

#nullable disable

namespace Railway_Group01.Migrations
{
    [DbContext(typeof(RailwayDbContext))]
    partial class RailwayDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Railway_Group01.Data.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BookAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Railway_Group01.Data.BookingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("PNRNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("PNRNo")
                        .IsUnique();

                    b.ToTable("BookingDetailss");
                });

            modelBuilder.Entity("Railway_Group01.Data.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfCompartment")
                        .HasColumnType("int");

                    b.Property<int>("NoOfSeat")
                        .HasColumnType("int");

                    b.Property<int>("SeatAvailable")
                        .HasColumnType("int");

                    b.Property<string>("TrainCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TrainCode");

                    b.ToTable("Coachs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Personal cabin(4)or coupe(2seat)\nPrivacy\nHigh fare\nComfortable Seat\nU can carry your Dog",
                            Name = "Class S",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 8,
                            TrainCode = "SE101",
                            TypeCode = "AC1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Personal cabin(4)or coupe(2seat)\nPrivacy\nHigh fare\nComfortable Seat\nU can carry your Dog",
                            Name = "Class S",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 2,
                            TrainCode = "SE101",
                            TypeCode = "AC1"
                        },
                        new
                        {
                            Id = 3,
                            Description = "No privacy\nComparatively Comfortable\nAverage fare\nNo dogs allowed\nluggage spaceious",
                            Name = "Class A",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 4,
                            TrainCode = "SE101",
                            TypeCode = "AC2"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Average Rush\nCooling worth comfort\nLess Lagague space\nAgain No Dogs",
                            Name = "Class B",
                            NoOfCompartment = 6,
                            NoOfSeat = 2,
                            SeatAvailable = 12,
                            TrainCode = "SE101",
                            TypeCode = "AC3"
                        },
                        new
                        {
                            Id = 5,
                            Description = "more comfor and amenities\nhigher fare",
                            Name = "Class C",
                            NoOfCompartment = 6,
                            NoOfSeat = 6,
                            SeatAvailable = 20,
                            TrainCode = "SE101",
                            TypeCode = "SL"
                        },
                        new
                        {
                            Id = 6,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 64,
                            TrainCode = "SE101",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Personal cabin(4)or coupe(2seat)\nPrivacy\nHigh fare\nComfortable Seat\nU can carry your Dog",
                            Name = "Class S",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 8,
                            TrainCode = "SE201",
                            TypeCode = "AC1"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Personal cabin(4)or coupe(2seat)\nPrivacy\nHigh fare\nComfortable Seat\nU can carry your Dog",
                            Name = "Class S",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 10,
                            TrainCode = "SE201",
                            TypeCode = "AC2"
                        },
                        new
                        {
                            Id = 9,
                            Description = "more comfor and amenities\\nhigher fare",
                            Name = "Class C",
                            NoOfCompartment = 6,
                            NoOfSeat = 6,
                            SeatAvailable = 12,
                            TrainCode = "SE201",
                            TypeCode = "SL"
                        },
                        new
                        {
                            Id = 10,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 3,
                            TrainCode = "SE201",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 11,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 2,
                            TrainCode = "SE201",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Personal cabin(4)or coupe(2seat)\nPrivacy\nHigh fare\nComfortable Seat\nU can carry your Dog",
                            Name = "Class S",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 8,
                            TrainCode = "SE301",
                            TypeCode = "AC1"
                        },
                        new
                        {
                            Id = 13,
                            Description = "No privacy\nComparatively Comfortable\nAverage fare\nNo dogs allowed\nluggage spaceious",
                            Name = "Class A",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 8,
                            TrainCode = "SE301",
                            TypeCode = "AC2"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Average Rush\nCooling worth comfort\nLess Lagague space\nAgain No Dogs",
                            Name = "Class B",
                            NoOfCompartment = 6,
                            NoOfSeat = 2,
                            SeatAvailable = 12,
                            TrainCode = "SE301",
                            TypeCode = "AC3"
                        },
                        new
                        {
                            Id = 15,
                            Description = "more comfor and amenities\\nhigher fare",
                            Name = "Class C",
                            NoOfCompartment = 6,
                            NoOfSeat = 6,
                            SeatAvailable = 22,
                            TrainCode = "SE301",
                            TypeCode = "SL"
                        },
                        new
                        {
                            Id = 16,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 22,
                            TrainCode = "SE301",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Personal cabin(4)or coupe(2seat)\nPrivacy\nHigh fare\nComfortable Seat\nU can carry your Dog",
                            Name = "Class S",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 8,
                            TrainCode = "SE401",
                            TypeCode = "AC1"
                        },
                        new
                        {
                            Id = 18,
                            Description = "No privacy\nComparatively Comfortable\nAverage fare\nNo dogs allowed\nluggage spaceious",
                            Name = "Class A",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 8,
                            TrainCode = "SE401",
                            TypeCode = "AC2"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Average Rush\nCooling worth comfort\nLess Lagague space\nAgain No Dogs",
                            Name = "Class B",
                            NoOfCompartment = 6,
                            NoOfSeat = 2,
                            SeatAvailable = 12,
                            TrainCode = "SE401",
                            TypeCode = "AC3"
                        },
                        new
                        {
                            Id = 20,
                            Description = "more comfor and amenities\\nhigher fare",
                            Name = "Class C",
                            NoOfCompartment = 6,
                            NoOfSeat = 6,
                            SeatAvailable = 20,
                            TrainCode = "SE401",
                            TypeCode = "SL"
                        },
                        new
                        {
                            Id = 21,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 24,
                            TrainCode = "SE401",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Personal cabin(4)or coupe(2seat)\nPrivacy\nHigh fare\nComfortable Seat\nU can carry your Dog",
                            Name = "Class S",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 2,
                            TrainCode = "SE501",
                            TypeCode = "AC1"
                        },
                        new
                        {
                            Id = 23,
                            Description = "No privacy\nComparatively Comfortable\nAverage fare\nNo dogs allowed\nluggage spaceious",
                            Name = "Class A",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 3,
                            TrainCode = "SE501",
                            TypeCode = "AC2"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Average Rush\nCooling worth comfort\nLess Lagague space\nAgain No Dogs",
                            Name = "Class B",
                            NoOfCompartment = 6,
                            NoOfSeat = 2,
                            SeatAvailable = 10,
                            TrainCode = "SE501",
                            TypeCode = "AC3"
                        },
                        new
                        {
                            Id = 25,
                            Description = "more comfor and amenities\\nhigher fare",
                            Name = "Class C",
                            NoOfCompartment = 6,
                            NoOfSeat = 6,
                            SeatAvailable = 17,
                            TrainCode = "SE501",
                            TypeCode = "SL"
                        },
                        new
                        {
                            Id = 26,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 13,
                            TrainCode = "SE501",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Personal cabin(4)or coupe(2seat)\nPrivacy\nHigh fare\nComfortable Seat\nU can carry your Dog",
                            Name = "Class S",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 7,
                            TrainCode = "SE601",
                            TypeCode = "AC1"
                        },
                        new
                        {
                            Id = 28,
                            Description = "No privacy\nComparatively Comfortable\nAverage fare\nNo dogs allowed\nluggage spaceious",
                            Name = "Class A",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 6,
                            TrainCode = "SE601",
                            TypeCode = "AC2"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Average Rush\nCooling worth comfort\nLess Lagague space\nAgain No Dogs",
                            Name = "Class B",
                            NoOfCompartment = 6,
                            NoOfSeat = 2,
                            SeatAvailable = 10,
                            TrainCode = "SE601",
                            TypeCode = "AC3"
                        },
                        new
                        {
                            Id = 30,
                            Description = "more comfor and amenities\\nhigher fare",
                            Name = "Class C",
                            NoOfCompartment = 6,
                            NoOfSeat = 6,
                            SeatAvailable = 20,
                            TrainCode = "SE601",
                            TypeCode = "SL"
                        },
                        new
                        {
                            Id = 31,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 12,
                            TrainCode = "SE601",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 32,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 13,
                            TrainCode = "SE601",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Personal cabin(4)or coupe(2seat)\nPrivacy\nHigh fare\nComfortable Seat\nU can carry your Dog",
                            Name = "Class S",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 8,
                            TrainCode = "SE701",
                            TypeCode = "AC1"
                        },
                        new
                        {
                            Id = 34,
                            Description = "No privacy\nComparatively Comfortable\nAverage fare\nNo dogs allowed\nluggage spaceious",
                            Name = "Class A",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 8,
                            TrainCode = "SE701",
                            TypeCode = "AC2"
                        },
                        new
                        {
                            Id = 35,
                            Description = "Average Rush\nCooling worth comfort\nLess Lagague space\nAgain No Dogs",
                            Name = "Class B",
                            NoOfCompartment = 6,
                            NoOfSeat = 2,
                            SeatAvailable = 11,
                            TrainCode = "SE701",
                            TypeCode = "AC3"
                        },
                        new
                        {
                            Id = 36,
                            Description = "more comfor and amenities\\nhigher fare",
                            Name = "Class C",
                            NoOfCompartment = 6,
                            NoOfSeat = 6,
                            SeatAvailable = 22,
                            TrainCode = "SE701",
                            TypeCode = "SL"
                        },
                        new
                        {
                            Id = 37,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 16,
                            TrainCode = "SE701",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 38,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 28,
                            TrainCode = "SE701",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 39,
                            Description = "Personal cabin(4)or coupe(2seat)\nPrivacy\nHigh fare\nComfortable Seat\nU can carry your Dog",
                            Name = "Class S",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 8,
                            TrainCode = "SE801",
                            TypeCode = "AC1"
                        },
                        new
                        {
                            Id = 40,
                            Description = "No privacy\nComparatively Comfortable\nAverage fare\nNo dogs allowed\nluggage spaceious",
                            Name = "Class A",
                            NoOfCompartment = 4,
                            NoOfSeat = 2,
                            SeatAvailable = 8,
                            TrainCode = "SE801",
                            TypeCode = "AC2"
                        },
                        new
                        {
                            Id = 41,
                            Description = "Average Rush\nCooling worth comfort\nLess Lagague space\nAgain No Dogs",
                            Name = "Class B",
                            NoOfCompartment = 6,
                            NoOfSeat = 2,
                            SeatAvailable = 11,
                            TrainCode = "SE801",
                            TypeCode = "AC3"
                        },
                        new
                        {
                            Id = 42,
                            Description = "more comfor and amenities\\nhigher fare",
                            Name = "Class C",
                            NoOfCompartment = 6,
                            NoOfSeat = 6,
                            SeatAvailable = 10,
                            TrainCode = "SE801",
                            TypeCode = "SL"
                        },
                        new
                        {
                            Id = 43,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 16,
                            TrainCode = "SE801",
                            TypeCode = "GE"
                        },
                        new
                        {
                            Id = 44,
                            Description = "basic amenities\nbudget-friendly\nbench-type seats\nmore people",
                            Name = "Class D",
                            NoOfCompartment = 4,
                            NoOfSeat = 16,
                            SeatAvailable = 22,
                            TrainCode = "SE801",
                            TypeCode = "GE"
                        });
                });

            modelBuilder.Entity("Railway_Group01.Data.Fare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DistanceRange")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfTrain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Fares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DistanceRange = 12000,
                            Price = 500000,
                            RouteId = 1,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 2,
                            DistanceRange = 12000,
                            Price = 300000,
                            RouteId = 1,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 3,
                            DistanceRange = 12000,
                            Price = 200000,
                            RouteId = 1,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 4,
                            DistanceRange = 12000,
                            Price = 100000,
                            RouteId = 1,
                            TypeOfClass = "SL",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 5,
                            DistanceRange = 12000,
                            Price = 50000,
                            RouteId = 1,
                            TypeOfClass = "GE",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 6,
                            DistanceRange = 12000,
                            Price = 400000,
                            RouteId = 1,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 7,
                            DistanceRange = 12000,
                            Price = 200000,
                            RouteId = 1,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 8,
                            DistanceRange = 12000,
                            Price = 150000,
                            RouteId = 1,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 9,
                            DistanceRange = 12000,
                            Price = 80000,
                            RouteId = 1,
                            TypeOfClass = "SL",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 10,
                            DistanceRange = 12000,
                            Price = 40000,
                            RouteId = 1,
                            TypeOfClass = "GE",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 11,
                            DistanceRange = 12000,
                            Price = 360000,
                            RouteId = 1,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 12,
                            DistanceRange = 12000,
                            Price = 180000,
                            RouteId = 1,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 13,
                            DistanceRange = 12000,
                            Price = 120000,
                            RouteId = 1,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 14,
                            DistanceRange = 12000,
                            Price = 60000,
                            RouteId = 1,
                            TypeOfClass = "SL",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 15,
                            DistanceRange = 12000,
                            Price = 30000,
                            RouteId = 1,
                            TypeOfClass = "GE",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 16,
                            DistanceRange = 18000,
                            Price = 550000,
                            RouteId = 2,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 17,
                            DistanceRange = 18000,
                            Price = 350000,
                            RouteId = 2,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 18,
                            DistanceRange = 18000,
                            Price = 250000,
                            RouteId = 2,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 19,
                            DistanceRange = 18000,
                            Price = 150000,
                            RouteId = 2,
                            TypeOfClass = "SL",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 20,
                            DistanceRange = 18000,
                            Price = 55000,
                            RouteId = 2,
                            TypeOfClass = "GE",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 21,
                            DistanceRange = 18000,
                            Price = 450000,
                            RouteId = 2,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 22,
                            DistanceRange = 18000,
                            Price = 250000,
                            RouteId = 2,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 23,
                            DistanceRange = 18000,
                            Price = 200000,
                            RouteId = 2,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 24,
                            DistanceRange = 18000,
                            Price = 85000,
                            RouteId = 2,
                            TypeOfClass = "SL",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 25,
                            DistanceRange = 18000,
                            Price = 45000,
                            RouteId = 2,
                            TypeOfClass = "GE",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 26,
                            DistanceRange = 18000,
                            Price = 390000,
                            RouteId = 2,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 27,
                            DistanceRange = 18000,
                            Price = 200000,
                            RouteId = 2,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 28,
                            DistanceRange = 18000,
                            Price = 160000,
                            RouteId = 2,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 29,
                            DistanceRange = 18000,
                            Price = 65000,
                            RouteId = 2,
                            TypeOfClass = "SL",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 30,
                            DistanceRange = 18000,
                            Price = 35000,
                            RouteId = 2,
                            TypeOfClass = "GE",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 31,
                            DistanceRange = 12000,
                            Price = 500000,
                            RouteId = 3,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 32,
                            DistanceRange = 12000,
                            Price = 300000,
                            RouteId = 3,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 33,
                            DistanceRange = 12000,
                            Price = 200000,
                            RouteId = 3,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 34,
                            DistanceRange = 12000,
                            Price = 100000,
                            RouteId = 3,
                            TypeOfClass = "SL",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 35,
                            DistanceRange = 12000,
                            Price = 50000,
                            RouteId = 3,
                            TypeOfClass = "GE",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 36,
                            DistanceRange = 12000,
                            Price = 400000,
                            RouteId = 3,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 37,
                            DistanceRange = 12000,
                            Price = 200000,
                            RouteId = 3,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 38,
                            DistanceRange = 12000,
                            Price = 150000,
                            RouteId = 3,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 39,
                            DistanceRange = 12000,
                            Price = 80000,
                            RouteId = 3,
                            TypeOfClass = "SL",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 40,
                            DistanceRange = 12000,
                            Price = 40000,
                            RouteId = 3,
                            TypeOfClass = "GE",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 41,
                            DistanceRange = 12000,
                            Price = 360000,
                            RouteId = 3,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 42,
                            DistanceRange = 12000,
                            Price = 180000,
                            RouteId = 3,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 43,
                            DistanceRange = 12000,
                            Price = 120000,
                            RouteId = 3,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 44,
                            DistanceRange = 12000,
                            Price = 60000,
                            RouteId = 3,
                            TypeOfClass = "SL",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 45,
                            DistanceRange = 12000,
                            Price = 30000,
                            RouteId = 3,
                            TypeOfClass = "GE",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 46,
                            DistanceRange = 18000,
                            Price = 550000,
                            RouteId = 4,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 47,
                            DistanceRange = 18000,
                            Price = 350000,
                            RouteId = 4,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 48,
                            DistanceRange = 18000,
                            Price = 250000,
                            RouteId = 4,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 49,
                            DistanceRange = 18000,
                            Price = 150000,
                            RouteId = 4,
                            TypeOfClass = "SL",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 50,
                            DistanceRange = 18000,
                            Price = 55000,
                            RouteId = 4,
                            TypeOfClass = "GE",
                            TypeOfTrain = "SF"
                        },
                        new
                        {
                            Id = 51,
                            DistanceRange = 18000,
                            Price = 450000,
                            RouteId = 4,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 52,
                            DistanceRange = 18000,
                            Price = 250000,
                            RouteId = 4,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 53,
                            DistanceRange = 18000,
                            Price = 200000,
                            RouteId = 4,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 54,
                            DistanceRange = 18000,
                            Price = 85000,
                            RouteId = 4,
                            TypeOfClass = "SL",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 55,
                            DistanceRange = 18000,
                            Price = 45000,
                            RouteId = 4,
                            TypeOfClass = "GE",
                            TypeOfTrain = "F"
                        },
                        new
                        {
                            Id = 56,
                            DistanceRange = 18000,
                            Price = 390000,
                            RouteId = 4,
                            TypeOfClass = "AC1",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 57,
                            DistanceRange = 18000,
                            Price = 200000,
                            RouteId = 4,
                            TypeOfClass = "AC2",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 58,
                            DistanceRange = 18000,
                            Price = 160000,
                            RouteId = 4,
                            TypeOfClass = "AC3",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 59,
                            DistanceRange = 18000,
                            Price = 65000,
                            RouteId = 4,
                            TypeOfClass = "SL",
                            TypeOfTrain = "S"
                        },
                        new
                        {
                            Id = 60,
                            DistanceRange = 18000,
                            Price = 35000,
                            RouteId = 4,
                            TypeOfClass = "GE",
                            TypeOfTrain = "S"
                        });
                });

            modelBuilder.Entity("Railway_Group01.Data.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PNRNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Suggestions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PNRNo")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Railway_Group01.Data.Passenger", b =>
                {
                    b.Property<string>("CIDNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TravelDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CIDNo");

                    b.HasIndex("UserId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Railway_Group01.Data.Refund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RefundRuleId")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("RefundRuleId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("Railway_Group01.Data.RefundRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("MaxRefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RefundRules");
                });

            modelBuilder.Entity("Railway_Group01.Data.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("EndStationId")
                        .HasColumnType("int");

                    b.Property<int>("StartStationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EndStationId");

                    b.HasIndex("StartStationId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Distance = 1726,
                            EndStationId = 4,
                            StartStationId = 1
                        },
                        new
                        {
                            Id = 2,
                            Distance = 1726,
                            EndStationId = 4,
                            StartStationId = 1
                        },
                        new
                        {
                            Id = 3,
                            Distance = 1726,
                            EndStationId = 1,
                            StartStationId = 4
                        },
                        new
                        {
                            Id = 4,
                            Distance = 1726,
                            EndStationId = 1,
                            StartStationId = 4
                        });
                });

            modelBuilder.Entity("Railway_Group01.Data.RouteDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArrivalStationId")
                        .HasColumnType("int");

                    b.Property<int>("DelayTime")
                        .HasColumnType("int");

                    b.Property<int>("DepartureStationId")
                        .HasColumnType("int");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<double>("TravelTime")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalStationId");

                    b.HasIndex("DepartureStationId");

                    b.HasIndex("RouteId");

                    b.ToTable("RouteDetailss");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalStationId = 2,
                            DelayTime = 13,
                            DepartureStationId = 1,
                            Distance = 411,
                            RouteId = 1,
                            TravelTime = 8.0
                        },
                        new
                        {
                            Id = 2,
                            ArrivalStationId = 3,
                            DelayTime = 13,
                            DepartureStationId = 2,
                            Distance = 627,
                            RouteId = 1,
                            TravelTime = 12.4
                        },
                        new
                        {
                            Id = 3,
                            ArrivalStationId = 4,
                            DelayTime = 12,
                            DepartureStationId = 3,
                            Distance = 688,
                            RouteId = 1,
                            TravelTime = 15.6
                        },
                        new
                        {
                            Id = 4,
                            ArrivalStationId = 3,
                            DelayTime = 10,
                            DepartureStationId = 1,
                            Distance = 1038,
                            RouteId = 2,
                            TravelTime = 21.399999999999999
                        },
                        new
                        {
                            Id = 5,
                            ArrivalStationId = 4,
                            DelayTime = 12,
                            DepartureStationId = 3,
                            Distance = 688,
                            RouteId = 2,
                            TravelTime = 10.6
                        },
                        new
                        {
                            Id = 6,
                            ArrivalStationId = 3,
                            DelayTime = 10,
                            DepartureStationId = 4,
                            Distance = 688,
                            RouteId = 3,
                            TravelTime = 12.6
                        },
                        new
                        {
                            Id = 7,
                            ArrivalStationId = 2,
                            DelayTime = 12,
                            DepartureStationId = 3,
                            Distance = 627,
                            RouteId = 3,
                            TravelTime = 13.6
                        },
                        new
                        {
                            Id = 8,
                            ArrivalStationId = 1,
                            DelayTime = 12,
                            DepartureStationId = 2,
                            Distance = 411,
                            RouteId = 3,
                            TravelTime = 8.5999999999999996
                        },
                        new
                        {
                            Id = 9,
                            ArrivalStationId = 2,
                            DelayTime = 12,
                            DepartureStationId = 4,
                            Distance = 1315,
                            RouteId = 4,
                            TravelTime = 22.600000000000001
                        },
                        new
                        {
                            Id = 10,
                            ArrivalStationId = 1,
                            DelayTime = 12,
                            DepartureStationId = 2,
                            Distance = 411,
                            RouteId = 4,
                            TravelTime = 7.5999999999999996
                        });
                });

            modelBuilder.Entity("Railway_Group01.Data.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("EndAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<bool>("ScheduleCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("TrainCode");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndAt = new DateTime(2023, 11, 27, 19, 12, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 1,
                            ScheduleCompleted = false,
                            StartAt = new DateTime(2023, 11, 26, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainCode = "SE801"
                        },
                        new
                        {
                            Id = 2,
                            EndAt = new DateTime(2023, 11, 28, 2, 30, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 1,
                            ScheduleCompleted = false,
                            StartAt = new DateTime(2023, 11, 26, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainCode = "SE601"
                        },
                        new
                        {
                            Id = 3,
                            EndAt = new DateTime(2023, 11, 28, 7, 10, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 1,
                            ScheduleCompleted = false,
                            StartAt = new DateTime(2023, 11, 26, 19, 20, 0, 0, DateTimeKind.Unspecified),
                            TrainCode = "SE201"
                        },
                        new
                        {
                            Id = 4,
                            EndAt = new DateTime(2023, 11, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 2,
                            ScheduleCompleted = false,
                            StartAt = new DateTime(2023, 11, 26, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainCode = "SE401"
                        },
                        new
                        {
                            Id = 5,
                            EndAt = new DateTime(2023, 11, 27, 20, 32, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 3,
                            ScheduleCompleted = false,
                            StartAt = new DateTime(2023, 11, 26, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            TrainCode = "SE701"
                        },
                        new
                        {
                            Id = 6,
                            EndAt = new DateTime(2023, 11, 29, 3, 12, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 3,
                            ScheduleCompleted = false,
                            StartAt = new DateTime(2023, 11, 26, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            TrainCode = "SE501"
                        },
                        new
                        {
                            Id = 7,
                            EndAt = new DateTime(2023, 11, 27, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 3,
                            ScheduleCompleted = false,
                            StartAt = new DateTime(2023, 11, 26, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            TrainCode = "SE101"
                        },
                        new
                        {
                            Id = 8,
                            EndAt = new DateTime(2023, 11, 27, 8, 25, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 4,
                            ScheduleCompleted = false,
                            StartAt = new DateTime(2023, 11, 26, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            TrainCode = "SE301"
                        });
                });

            modelBuilder.Entity("Railway_Group01.Data.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameOfDivision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("int");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameOfDivision = "Ho Chi Minh City",
                            StationCode = "SGO",
                            StationName = "Sai Gon",
                            ZipCode = 700000,
                            Zone = "Southern"
                        },
                        new
                        {
                            Id = 2,
                            NameOfDivision = "Khanh Hoa Province",
                            StationCode = "NTR",
                            StationName = "Nha Trang",
                            ZipCode = 650000,
                            Zone = "Central"
                        },
                        new
                        {
                            Id = 3,
                            NameOfDivision = "Thua Thien Hue Province",
                            StationCode = "HUE",
                            StationName = "Hue",
                            ZipCode = 530000,
                            Zone = "Central"
                        },
                        new
                        {
                            Id = 4,
                            NameOfDivision = "Hanoi Capital",
                            StationCode = "HNO",
                            StationName = "Ha Noi",
                            ZipCode = 700000,
                            Zone = "North"
                        });
                });

            modelBuilder.Entity("Railway_Group01.Data.Ticket", b =>
                {
                    b.Property<string>("PNRNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CIDNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int");

                    b.Property<int>("CompartmentNo")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SeatNo")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PNRNo");

                    b.HasIndex("CIDNo")
                        .IsUnique();

                    b.HasIndex("CoachId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Railway_Group01.Data.Train", b =>
                {
                    b.Property<string>("TrainCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRunning")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainCode");

                    b.ToTable("Trains");

                    b.HasData(
                        new
                        {
                            TrainCode = "SE101",
                            Description = "Train SE1 is a fast train running on the North-South unified train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE1",
                            TypeCode = "F"
                        },
                        new
                        {
                            TrainCode = "SE102",
                            Description = "Train SE1 is a fast train running on the North-South unified train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE1",
                            TypeCode = "F"
                        },
                        new
                        {
                            TrainCode = "SE201",
                            Description = "Train SE2 is a fast train running on the unified North-South train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE2",
                            TypeCode = "F"
                        },
                        new
                        {
                            TrainCode = "SE202",
                            Description = "Train SE2 is a fast train running on the unified North-South train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE2",
                            TypeCode = "F"
                        },
                        new
                        {
                            TrainCode = "SE301",
                            Description = "The SE3 train is the fastest and most beautiful train running on the unified North-South train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE3",
                            TypeCode = "SF"
                        },
                        new
                        {
                            TrainCode = "SE302",
                            Description = "The SE3 train is the fastest and most beautiful train running on the unified North-South train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE3",
                            TypeCode = "SF"
                        },
                        new
                        {
                            TrainCode = "SE401",
                            Description = "Train SE4 is the fastest and most beautiful train running on the North-South unified train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE4",
                            TypeCode = "SF"
                        },
                        new
                        {
                            TrainCode = "SE402",
                            Description = "Train SE4 is the fastest and most beautiful train running on the North-South unified train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE4",
                            TypeCode = "SF"
                        },
                        new
                        {
                            TrainCode = "SE501",
                            Description = "Train SE5 is a slow train running on the unified North-South train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE5",
                            TypeCode = "S"
                        },
                        new
                        {
                            TrainCode = "SE502",
                            Description = "Train SE5 is a slow train running on the unified North-South train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE5",
                            TypeCode = "S"
                        },
                        new
                        {
                            TrainCode = "SE601",
                            Description = "Train SE6 is a slow train running on the unified North-South train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE6",
                            TypeCode = "S"
                        },
                        new
                        {
                            TrainCode = "SE602",
                            Description = "Train SE6 is a slow train running on the unified North-South train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE6",
                            TypeCode = "S"
                        },
                        new
                        {
                            TrainCode = "SE701",
                            Description = "Train SE7 is a fast train running on the North-South unified train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE7",
                            TypeCode = "F"
                        },
                        new
                        {
                            TrainCode = "SE702",
                            Description = "Train SE7 is a fast train running on the North-South unified train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE7",
                            TypeCode = "F"
                        },
                        new
                        {
                            TrainCode = "SE801",
                            Description = "Train SE8 is a fast train running on the North-South unified train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE8",
                            TypeCode = "F"
                        },
                        new
                        {
                            TrainCode = "SE802",
                            Description = "Train SE8 is a fast train running on the North-South unified train route. The Railway industry is trying to improve service quality and train speed to increasingly meet the travel needs of customers.",
                            IsRunning = true,
                            Name = "SE8",
                            TypeCode = "F"
                        });
                });

            modelBuilder.Entity("Railway_Group01.Data.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassengerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Railway_Group01.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Railway_Group01.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Railway_Group01.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Railway_Group01.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Railway_Group01.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Railway_Group01.Data.Booking", b =>
                {
                    b.HasOne("Railway_Group01.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Railway_Group01.Data.BookingDetails", b =>
                {
                    b.HasOne("Railway_Group01.Data.Booking", "Booking")
                        .WithMany("BookingDetails")
                        .HasForeignKey("BookingId");

                    b.HasOne("Railway_Group01.Data.Ticket", "Ticket")
                        .WithOne("BookingDetails")
                        .HasForeignKey("Railway_Group01.Data.BookingDetails", "PNRNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Railway_Group01.Data.Coach", b =>
                {
                    b.HasOne("Railway_Group01.Data.Train", "Trains")
                        .WithMany("Coaches")
                        .HasForeignKey("TrainCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trains");
                });

            modelBuilder.Entity("Railway_Group01.Data.Fare", b =>
                {
                    b.HasOne("Railway_Group01.Data.Route", "Route")
                        .WithMany("Fares")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Railway_Group01.Data.Feedback", b =>
                {
                    b.HasOne("Railway_Group01.Data.Ticket", "Ticket")
                        .WithOne("Feedback")
                        .HasForeignKey("Railway_Group01.Data.Feedback", "PNRNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Railway_Group01.Data.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId");

                    b.Navigation("Ticket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Railway_Group01.Data.Passenger", b =>
                {
                    b.HasOne("Railway_Group01.Data.User", "User")
                        .WithMany("Passengers")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Railway_Group01.Data.Refund", b =>
                {
                    b.HasOne("Railway_Group01.Data.Booking", "Booking")
                        .WithMany("Refunds")
                        .HasForeignKey("BookingId");

                    b.HasOne("Railway_Group01.Data.RefundRule", "RefundRule")
                        .WithMany()
                        .HasForeignKey("RefundRuleId");

                    b.HasOne("Railway_Group01.Data.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.Navigation("Booking");

                    b.Navigation("RefundRule");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Railway_Group01.Data.Route", b =>
                {
                    b.HasOne("Railway_Group01.Data.Station", "EndStation")
                        .WithMany()
                        .HasForeignKey("EndStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Railway_Group01.Data.Station", "StartStation")
                        .WithMany()
                        .HasForeignKey("StartStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EndStation");

                    b.Navigation("StartStation");
                });

            modelBuilder.Entity("Railway_Group01.Data.RouteDetails", b =>
                {
                    b.HasOne("Railway_Group01.Data.Station", "ArrivalStation")
                        .WithMany("ArrivalRouteDetails")
                        .HasForeignKey("ArrivalStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Railway_Group01.Data.Station", "DepartureStation")
                        .WithMany("DepartureRouteDetails")
                        .HasForeignKey("DepartureStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Railway_Group01.Data.Route", "Route")
                        .WithMany("RouteDetails")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArrivalStation");

                    b.Navigation("DepartureStation");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Railway_Group01.Data.Schedule", b =>
                {
                    b.HasOne("Railway_Group01.Data.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Railway_Group01.Data.Train", "Train")
                        .WithMany("Schedules")
                        .HasForeignKey("TrainCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("Railway_Group01.Data.Ticket", b =>
                {
                    b.HasOne("Railway_Group01.Data.Passenger", "Passenger")
                        .WithOne("Ticket")
                        .HasForeignKey("Railway_Group01.Data.Ticket", "CIDNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Railway_Group01.Data.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId");

                    b.HasOne("Railway_Group01.Data.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Coach");

                    b.Navigation("Passenger");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Railway_Group01.Data.Transaction", b =>
                {
                    b.HasOne("Railway_Group01.Data.Booking", "Booking")
                        .WithMany("Transactions")
                        .HasForeignKey("BookingId");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Railway_Group01.Data.Booking", b =>
                {
                    b.Navigation("BookingDetails");

                    b.Navigation("Refunds");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Railway_Group01.Data.Passenger", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Railway_Group01.Data.Route", b =>
                {
                    b.Navigation("Fares");

                    b.Navigation("RouteDetails");
                });

            modelBuilder.Entity("Railway_Group01.Data.Station", b =>
                {
                    b.Navigation("ArrivalRouteDetails");

                    b.Navigation("DepartureRouteDetails");
                });

            modelBuilder.Entity("Railway_Group01.Data.Ticket", b =>
                {
                    b.Navigation("BookingDetails");

                    b.Navigation("Feedback");
                });

            modelBuilder.Entity("Railway_Group01.Data.Train", b =>
                {
                    b.Navigation("Coaches");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Railway_Group01.Data.User", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Passengers");
                });
#pragma warning restore 612, 618
        }
    }
}
